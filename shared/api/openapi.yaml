openapi: 3.0.0
info:
  title: Orders API
  description: API для управления заказами, пользователями и товарами
  version: 1.0.0
  contact:
    name: Orders Team
servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.orders.com
    description: Production server

paths:
  /api/users:
    get:
      summary: Получить всех пользователей
      description: Возвращает список всех пользователей в системе
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Внутренняя ошибка сервера
    post:
      summary: Создать пользователя
      description: Создает нового пользователя в системе
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неверные данные
        '409':
          description: Пользователь уже существует

  /api/users/get:
    get:
      summary: Получить пользователя по ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Пользователь найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Пользователь не найден

  /api/users/update:
    put:
      summary: Обновить пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Пользователь обновлен
        '404':
          description: Пользователь не найден

  /api/users/delete:
    delete:
      summary: Удалить пользователя
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Пользователь удален
        '404':
          description: Пользователь не найден

  /api/products:
    get:
      summary: Получить все товары
      responses:
        '200':
          description: Список товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Создать товар
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Товар создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /api/products/get:
    get:
      summary: Получить товар по ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Товар найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Товар не найден

  /api/products/category:
    get:
      summary: Получить товары по категории
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Список товаров в категории
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /api/products/update:
    put:
      summary: Обновить товар
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Товар обновлен
        '404':
          description: Товар не найден

  /api/products/delete:
    delete:
      summary: Удалить товар
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Товар удален
        '404':
          description: Товар не найден

  /api/orders:
    get:
      summary: Получить все заказы
      responses:
        '200':
          description: Список заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Создать заказ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: Заказ создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /api/orders/get:
    get:
      summary: Получить заказ по ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Заказ найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Заказ не найден

  /api/orders/user:
    get:
      summary: Получить заказы пользователя
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Список заказов пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /api/orders/status:
    get:
      summary: Получить заказы по статусу
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum: [pending, confirmed, shipped, delivered, cancelled]
      responses:
        '200':
          description: Список заказов по статусу
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /api/orders/update-status:
    put:
      summary: Обновить статус заказа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                status:
                  type: string
                  enum: [pending, confirmed, shipped, delivered, cancelled]
      responses:
        '200':
          description: Статус заказа обновлен
        '404':
          description: Заказ не найден

  /api/orders/delete:
    delete:
      summary: Удалить заказ
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Заказ удален
        '404':
          description: Заказ не найден

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор пользователя
        name:
          type: string
          description: Имя пользователя
        email:
          type: string
          format: email
          description: Email пользователя
        created_at:
          type: string
          format: date-time
          description: Дата создания
        updated_at:
          type: string
          format: date-time
          description: Дата последнего обновления
      required:
        - id
        - name
        - email

    UserCreate:
      type: object
      properties:
        name:
          type: string
          description: Имя пользователя
        email:
          type: string
          format: email
          description: Email пользователя
      required:
        - name
        - email

    UserUpdate:
      type: object
      properties:
        id:
          type: integer
          description: ID пользователя
        name:
          type: string
          description: Имя пользователя
        email:
          type: string
          format: email
          description: Email пользователя
      required:
        - id

    Product:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор товара
        name:
          type: string
          description: Название товара
        description:
          type: string
          description: Описание товара
        price:
          type: number
          format: decimal
          description: Цена товара
        category:
          type: string
          description: Категория товара
        stock:
          type: integer
          description: Количество на складе
        created_at:
          type: string
          format: date-time
          description: Дата создания
        updated_at:
          type: string
          format: date-time
          description: Дата последнего обновления
      required:
        - id
        - name
        - price
        - category

    ProductCreate:
      type: object
      properties:
        name:
          type: string
          description: Название товара
        description:
          type: string
          description: Описание товара
        price:
          type: number
          format: decimal
          description: Цена товара
        category:
          type: string
          description: Категория товара
        stock:
          type: integer
          description: Количество на складе
      required:
        - name
        - price
        - category

    ProductUpdate:
      type: object
      properties:
        id:
          type: integer
          description: ID товара
        name:
          type: string
          description: Название товара
        description:
          type: string
          description: Описание товара
        price:
          type: number
          format: decimal
          description: Цена товара
        category:
          type: string
          description: Категория товара
        stock:
          type: integer
          description: Количество на складе
      required:
        - id

    Order:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор заказа
        user_id:
          type: integer
          description: ID пользователя
        product_id:
          type: integer
          description: ID товара
        quantity:
          type: integer
          description: Количество товара
        total_price:
          type: number
          format: decimal
          description: Общая стоимость заказа
        status:
          type: string
          enum: [pending, confirmed, shipped, delivered, cancelled]
          description: Статус заказа
        order_date:
          type: string
          format: date-time
          description: Дата заказа
        created_at:
          type: string
          format: date-time
          description: Дата создания
        updated_at:
          type: string
          format: date-time
          description: Дата последнего обновления
      required:
        - id
        - user_id
        - product_id
        - quantity
        - total_price
        - status

    OrderCreate:
      type: object
      properties:
        user_id:
          type: integer
          description: ID пользователя
        product_id:
          type: integer
          description: ID товара
        quantity:
          type: integer
          description: Количество товара
        total_price:
          type: number
          format: decimal
          description: Общая стоимость заказа
        status:
          type: string
          enum: [pending, confirmed, shipped, delivered, cancelled]
          description: Статус заказа
      required:
        - user_id
        - product_id
        - quantity
        - total_price 